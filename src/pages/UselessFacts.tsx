import { JellyNavbar } from "@/components/jelly-navbar";
import { ModeToggle } from "@/components/mode-toggle";
import { DancingText } from "@/components/dancing-text";
import { Card } from "@/components/ui/card";
import { Typography } from "@/components/ui/typography";
import { useState } from "react";
import { FaStar } from "react-icons/fa";

const navItems = [
  { path: "/", label: "–ì–ª–∞–≤–Ω–∞—è" },
  { path: "/useless-facts", label: "–ë–µ—Å–ø–æ–ª–µ–∑–Ω—ã–µ —Ñ–∞–∫—Ç—ã" },
  { path: "/silly-generator", label: "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –≥–ª—É–ø–æ—Å—Ç–µ–π" },
];

const uselessFacts = [
  "–ë–∞–Ω–∞–Ω—ã –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ —è–≥–æ–¥—ã, –∞ –∫–ª—É–±–Ω–∏–∫–∞ - –Ω–µ—Ç!",
  "–ö–æ–≥–¥–∞ —É—Ç–∫–∏ –∫—Ä—è–∫–∞—é—Ç, —ç—Ö–æ –Ω–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç, –∏ –Ω–∏–∫—Ç–æ –Ω–µ –∑–Ω–∞–µ—Ç –ø–æ—á–µ–º—É!",
  "–ß–µ–ª–æ–≤–µ–∫ –Ω–µ –º–æ–∂–µ—Ç —á–∏—Ö–Ω—É—Ç—å —Å –æ—Ç–∫—Ä—ã—Ç—ã–º–∏ –≥–ª–∞–∑–∞–º–∏!",
  "–ú–µ–¥—É–∑—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç —É–∂–µ –±–æ–ª–µ–µ 650 –º–∏–ª–ª–∏–æ–Ω–æ–≤ –ª–µ—Ç –∏ –¥–æ —Å–∏—Ö –ø–æ—Ä –Ω–µ –∏–º–µ—é—Ç –º–æ–∑–≥–∞!",
  "–õ–µ–Ω–∏–≤—Ü—ã –º–æ–≥—É—Ç –∑–∞–¥–µ—Ä–∂–∏–≤–∞—Ç—å –¥—ã—Ö–∞–Ω–∏–µ –ø–æ–¥ –≤–æ–¥–æ–π –¥–æ 40 –º–∏–Ω—É—Ç!",
  "–£ –æ—Å—å–º–∏–Ω–æ–≥–æ–≤ —Ç—Ä–∏ —Å–µ—Ä–¥—Ü–∞!",
  "–§–ª–∞–º–∏–Ω–≥–æ –æ—Ç –ø—Ä–∏—Ä–æ–¥—ã –±–µ–ª—ã–µ, —Ä–æ–∑–æ–≤—ã–º–∏ –æ–Ω–∏ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –∏–∑-–∑–∞ –≤–æ–¥–æ—Ä–æ—Å–ª–µ–π!",
];

export function UselessFacts() {
  const [selectedFact, setSelectedFact] = useState<number | null>(null);

  return (
    <div className="container mx-auto min-h-screen p-8">
      <header className="mb-8 flex items-center justify-between">
        <DancingText text="–ë–µ—Å–ø–æ–ª–µ–∑–Ω—ã–µ —Ñ–∞–∫—Ç—ã" />
        <div className="flex items-center gap-4">
          <JellyNavbar items={navItems} />
          <ModeToggle />
        </div>
      </header>

      <main className="space-y-8">
        <Typography.H1 className="text-center">
          ü§ì –ê–±—Å–æ–ª—é—Ç–Ω–æ –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã–µ —Ñ–∞–∫—Ç—ã
        </Typography.H1>

        <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
          {uselessFacts.map((fact, index) => (
            <Card
              key={index}
              className={`cursor-pointer p-6 transition-all duration-300 hover:scale-105 ${
                selectedFact === index ? "border-primary" : ""
              }`}
              onClick={() => setSelectedFact(index)}
            >
              <div className="flex items-start gap-2">
                <FaStar
                  className={`h-6 w-6 transition-colors ${
                    selectedFact === index
                      ? "text-primary"
                      : "text-muted-foreground"
                  }`}
                />
                <Typography.P>{fact}</Typography.P>
              </div>
            </Card>
          ))}
        </div>

        {selectedFact !== null && (
          <Typography.H3 className="text-center text-primary">
            –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢–µ–ø–µ—Ä—å –≤—ã –∑–Ω–∞–µ—Ç–µ –µ—â–µ –æ–¥–∏–Ω –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã–π —Ñ–∞–∫—Ç! üéâ
          </Typography.H3>
        )}
      </main>

      <footer className="mt-16 text-center">
        <Typography.Muted>
          –≠—Ç–∏ —Ñ–∞–∫—Ç—ã –Ω–µ —Å–¥–µ–ª–∞—é—Ç –≤–∞—Å —É–º–Ω–µ–µ, –Ω–æ –∑–∞—Ç–æ —Ç–µ–ø–µ—Ä—å –µ—Å—Ç—å –æ —á–µ–º –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å!
        </Typography.Muted>
      </footer>
    </div>
  );
}